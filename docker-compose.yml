### EXAMPLE DOCKER COMPOSE ###
services:
  audiobookshelf:
    build:
      context: .
      dockerfile: Dockerfile    # ABS runs on port 13378 by default. If you want to change
    volumes:
      # These volumes are needed to keep your library persistent
      # and allow media to be accessed by the ABS server.
      # The path to the left of the colon is the path on your computer,
      # and the path to the right of the colon is where the data is
      # available to ABS in Docker.
      # You can change these media directories or add as many as you want
      - ./audiobooks:/audiobooks
      - ./podcasts:/podcasts
      # The metadata directory can be stored anywhere on your computer
      - ./metadata:/metadata
      # The config directory needs to be on the same physical machine
      # you are running ABS on
      - ./config:/config
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL}
      - OPENAI_TEMPERATURE=${OPENAI_TEMPERATURE}
      - CHROMA_HOST=${CHROMA_HOST}
      - CHROMA_PORT=8000
      - CHROMA_AUTH_PROVIDER=${CHROMA_AUTH_PROVIDER}
      - CHROMA_AUTH_CREDENTIALS=${CHROMA_AUTH_CREDENTIALS}
    restart: unless-stopped
    # You can use the following user directive to run the ABS
    # docker container as a specific user. You will need to change
    # the UID and GID to the correct values for your user.
    # user: 1000:1000
    networks:
      - chroma_net
      - tunnel_net

  cloudflared:
    image: cloudflare/cloudflared:latest
    command: tunnel run
    environment:
      - TUNNEL_TOKEN=${TUNNEL_TOKEN}
    volumes:
      - ./cloudflared:/home/nonroot/.cloudflared  # Store tunnel credentials
    restart: unless-stopped
    networks:
      - tunnel_net

  chroma:
    image: chromadb/chroma:latest
    volumes:
      - ./chroma_data:/chroma/chroma
    ports:
      - "8000:8000"
    environment:
      - ALLOW_RESET=true
      - CHROMA_SERVER_AUTH_CREDENTIALS=${CHROMA_AUTH_CREDENTIALS}
      - CHROMA_SERVER_AUTH_PROVIDER=${CHROMA_AUTH_PROVIDER}
      - CHROMA_SERVER_AUTH_TOKEN_TRANSPORT_HEADER=AUTHORIZATION
    networks:
      - chroma_net

networks:
  chroma_net:
    driver: bridge
  tunnel_net:
    driver: bridge